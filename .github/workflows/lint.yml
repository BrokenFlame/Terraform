name: Terraform CI
on: 
  pull_request: 
    branches:
     - '**'
  push:
    branches:
      - master
      - main
    
jobs:
  tf-fmt:
    name: Terraform Format Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false
        
      - name: Terraform fmt stdout
        run: echo ${{ steps.fmt.outputs.stdout }}
        
      - name: Terraform fmt stderr
        run: echo ${{ steps.fmt.outputs.stderr }}
        
      - name: Terraform fmt exitcode
        run: echo ${{ steps.fmt.outputs.exitcode }}
    
  tf-validate:
    name: Terraform  Validation
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
    
      - name: Terraform Init without Backend
        run: terraform init -backend=false
      
      - name: Terraform Validate  
        id: validate
        run: terraform validate -no-color
        
      - name: Terraform validate stdout
        run: echo ${{ steps.validate.outputs.stdout }}
        
      - name: Terraform validate stderr
        run: echo ${{ steps.validate.outputs.stderr }}
        
      - name: Terraform validate exitcode
        run: echo ${{ steps.validate.outputs.exitcode }}

  tflint:
    name: 'TF Lint'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v3
      name: Setup TFLint
      with:
        tflint_version: latest

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact
  
  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check configuration files for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/iac@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # Scans the whole repository by default.
        # Alternatively, add the path to the configuration file that you would like to test.
        # For example `deployment.yaml` for a Kubernetes deployment manifest
        # or `main.tf` for a Terraform configuration file
        # with:
          # file: your-file-to-test.yaml
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  
  slack-notification:
    needs: [ tflint, tf-validate, tf-fmt, snyk]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Send notification
      run: exit 0
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: 'CHANNEL_ID'
        # For posting a rich message using Block Kit
        payload: |
          {
            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
