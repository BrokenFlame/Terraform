name: Terraform Actions

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to execute.'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
      environment:
        description: 'Environment to execute Terraform against.'
        type: choice
        required: true
        options:
        - development
        - qa
        - uat
        - staging
        - production

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    if:  ${{ inputs.action == 'plan' }}
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
      - run: echo terraform init -backend-config=${{ inputs.environment }}
      - run: terraform init -backend-config=${{ inputs.environment }}
      - id: plan
        run: terraform plan -no-color
      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}

  terraform-apply:
    runs-on: ubuntu-latest
    if:  ${{ inputs.action == 'apply' }}
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
      - run: echo terraform init -backend-config=${{ inputs.environment }}
      - run: terraform init -backend-config=${{ inputs.environment }}
      - id: apply
        run: terraform apply -no-color
      - run: echo ${{ steps.apply.outputs.stdout }}
      - run: echo ${{ steps.apply.outputs.stderr }}
      - run: echo ${{ steps.apply.outputs.exitcode }}
       
  terraform-destroy:
    runs-on: ubuntu-latest
    if:  ${{ inputs.action == 'destroy' }}
    steps:
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
      - run: echo terraform init -backend-config=${{ inputs.environment }}
      - run: terraform init -backend-config=${{ inputs.environment }}
      - id: apply
        run: terraform destroy -no-color
      - run: echo ${{ steps.destroy.outputs.stdout }}
      - run: echo ${{ steps.destroy.outputs.stderr }}
      - run: echo ${{ steps.destroy.outputs.exitcode }}
